variables:
  APP_ORIGINAL_NAME: eletiva-0.0.1-SNAPSHOT.jar
  APP_NAME: eletiva-0.0.1-SNAPSHOT-v$CI_PIPELINE_IID.jar
  APP_SIMPLE_NAME: 20251_maua_ecm971_gitlab_api_musica
  ENV_NAME: 20251mauaecm971gitlabapimusica-env
  JAR_FILE: target/*.jar

stages:
  - build
  - test
  - deploy_aws

build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-21
  script:
    - mvn clean package -DskipTests
    - mv "target/$APP_ORIGINAL_NAME" "target/$APP_NAME"
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

ping_pong:
  stage: test
  image: maven:3.9.6-eclipse-temurin-21
  script:
    - java -jar $JAR_FILE &
    - sleep 10
    - |
      RESPONSE=$(curl --silent http://localhost:8080/api/ping)
      if [[ "$RESPONSE" != "pong" ]]; then
        echo "Erro: Esperado 'pong', obtido '$RESPONSE'"
        exit 1
      fi
  needs: [build]

testa_ordenacao:
  stage: test
  image: maven:3.9.6-eclipse-temurin-21
  script:
    - java -jar $JAR_FILE &
    - sleep 10
    - |
      curl -X POST http://localhost:8080/api/music -H "Content-Type: application/json" -d '{"musicName": "Undone thing"}'
      curl -X POST http://localhost:8080/api/music -H "Content-Type: application/json" -d '{"musicName": "One"}'
      curl -X POST http://localhost:8080/api/music -H "Content-Type: application/json" -d '{"musicName": "Still"}'
      curl -X POST http://localhost:8080/api/music -H "Content-Type: application/json" -d '{"musicName": "Uncover"}'
      curl -X PATCH http://localhost:8080/api/music/Undone%20thing/review -H "Content-Type: application/json" -d '{"review": 5}'
      curl -X PATCH http://localhost:8080/api/music/One/review -H "Content-Type: application/json" -d '{"review": 4}'
      curl -X PATCH http://localhost:8080/api/music/Still/review -H "Content-Type: application/json" -d '{"review": 3}'
      curl -X PATCH http://localhost:8080/api/music/Uncover/review -H "Content-Type: application/json" -d '{"review": 3}'
      curl --silent http://localhost:8080/api/music
  needs: [build]

cadastra_musica:
  stage: test
  image: maven:3.9.6-eclipse-temurin-21
  script:
    - java -jar $JAR_FILE &
    - sleep 10
    - |
      curl -X POST http://localhost:8080/api/music -H "Content-Type: application/json" -d '{"musicName": "Nova MÃºsica"}' > output.json
      grep '"review":0' output.json
  needs: [build]

deploy:
  stage: deploy_aws
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws configure set region us-east-1
    - aws s3 cp "target/$APP_NAME" "s3://$S3_BUCKET/$APP_NAME"
    - aws elasticbeanstalk create-application-version  --application-name $APP_SIMPLE_NAME --version-label $CI_PIPELINE_IID --source-bundle S3Bucket=$S3_BUCKET,S3Key=$APP_NAME
    - aws elasticbeanstalk update-environment --application-name $APP_SIMPLE_NAME --environment-name $ENV_NAME --version-label $CI_PIPELINE_IID
